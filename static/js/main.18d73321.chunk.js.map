{"version":3,"sources":["components/ToggleIcon.js","components/SidebarComponent.js","components/StatusBar.js","components/MenuComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ToggleIcon","React","createElement","xmlns","viewBox","width","height","fill","x","y","rx","points","SidebarComponent","isSidebarOpen","setIsSidebarOpen","useState","isSystemsOpen","setIsSystemsOpen","isIconVisible","setIsIconVisible","className","src","alt","onClick","toggleSidebar","toggleSystems","FaFolder","FaThLarge","StatusBar","time","setTime","Date","toLocaleTimeString","batteryLevel","setBatteryLevel","networkStatus","setNetworkStatus","signalStrength","setSignalStrength","useEffect","interval","setInterval","clearInterval","navigator","getBattery","Promise","resolve","level","then","bat","Math","round","updateNetworkStatus","onLine","window","addEventListener","removeEventListener","signalStrengthLevels","signalInterval","updateSignalStrength","randomIndex","floor","random","length","Fragment","MenuItem","_ref","item","onDelete","onEdit","isOpen","toggleOpen","isEditing","setIsEditing","editedTitle","setEditedTitle","title","type","value","onChange","e","target","handleSave","id","handleCancel","children","map","child","key","MenuComponent","menus","setMenus","menuItems","setMenuItems","parentId","setParentId","depth","setDepth","setTitle","menuId","setMenuId","selectedMenu","setSelectedMenu","openItems","setOpenItems","async","response","fetch","data","json","error","console","fetchMenus","fetchMenuItems","handleDeleteItem","method","ok","Error","filter","catch","handleEditItem","newTitle","headers","body","JSON","stringify","updatedItem","prevItems","alert","prev","filteredParents","menu_id","parseInt","toggleAll","open","newOpenItems","forEach","menu","hierarchy","roots","parent_id","push","buildHierarchy","name","onSubmit","_menuItems$find","preventDefault","newDepth","find","reject","newItem","newMenu","prevMenus","selectedId","selected","readOnly","disabled","parent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.18d73321.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ToggleIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      fill=\"white\"\r\n    >\r\n      <rect x=\"3\" y=\"5\" width=\"12\" height=\"2\" rx=\"1\" />\r\n      <rect x=\"3\" y=\"11\" width=\"12\" height=\"2\" rx=\"1\" />\r\n      <rect x=\"3\" y=\"17\" width=\"12\" height=\"2\" rx=\"1\" />\r\n      <polygon points=\"17,5 17,19 22,12\" fill=\"white\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ToggleIcon;\r\n","import React, { useState } from \"react\";\r\nimport { FaThLarge, FaFolder } from \"react-icons/fa\";\r\nimport ToggleIcon from \"./ToggleIcon\"; // Import the custom icon\r\n\r\nconst SidebarComponent = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isSystemsOpen, setIsSystemsOpen] = useState(false);\r\n  const [isIconVisible, setIsIconVisible] = useState(true); // State to manage icon visibility\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n    setIsIconVisible(!isSidebarOpen); // Hide icon when sidebar is opened\r\n  };\r\n\r\n  const toggleSystems = () => setIsSystemsOpen(!isSystemsOpen);\r\n\r\n  return (\r\n    <div\r\n      className={`sidebar bg-black ${\r\n        isSidebarOpen ? \"w-64\" : \"w-16\"\r\n      } h-screen shadow-md transition-all duration-300`}\r\n    >\r\n      <div className=\"flex items-center\">\r\n        {/* Show icon when sidebar is closed */}\r\n        {isIconVisible && (\r\n          <img\r\n            src=\"/icon.png\" // The image path from the public folder\r\n            alt=\"Toggle Sidebar\"\r\n            className=\"w-30 h-10 mt-4 filter invert\"\r\n          />\r\n        )}\r\n\r\n        {/* Sidebar toggle button */}\r\n        <button\r\n          onClick={toggleSidebar}\r\n          className=\"text-white p-2 w-10 h-10 focus:outline-none hover:bg-gray-800 ml-5 relative z-10\" \r\n        >\r\n          <ToggleIcon />\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"space-y-2 p-4 mt-10\">\r\n        {/* Systems Menu */}\r\n        <li>\r\n          <button\r\n            className=\"flex items-center w-full text-left p-2 text-white hover:bg-gray-800 rounded bg-black\"\r\n            onClick={toggleSystems}\r\n          >\r\n            <FaFolder className=\"mr-2 text-white\" />\r\n            {isSidebarOpen && <span>Systems</span>}\r\n          </button>\r\n          {isSidebarOpen && isSystemsOpen && (\r\n            <ul className=\"ml-4 space-y-1 bg-black\">\r\n              <li>\r\n                <button className=\"flex items-center w-full text-white p-2 hover:bg-gray-800 rounded bg-black\">\r\n                  <FaThLarge className=\"mr-2 text-white\" />\r\n                  {isSidebarOpen && <span>System Code</span>}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button className=\"flex items-center w-full text-white p-2 hover:bg-gray-800 rounded bg-black\">\r\n                  <FaThLarge className=\"mr-2 text-white\" />\r\n                  {isSidebarOpen && <span>Properties</span>}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button className=\"flex items-center w-full text-white p-2 hover:bg-gray-800 rounded bg-black\">\r\n                  <FaThLarge className=\"mr-2 text-white\" />\r\n                  {isSidebarOpen && <span>Menus</span>}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button className=\"flex items-center w-full text-white p-2 hover:bg-gray-800 rounded bg-black\">\r\n                  <FaThLarge className=\"mr-2 text-white\" />\r\n                  {isSidebarOpen && <span>API List</span>}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </li>\r\n\r\n        {/* Users Menu */}\r\n        <li>\r\n          <button className=\"flex items-center w-full text-left p-2 text-white hover:bg-gray-800 rounded bg-black\">\r\n            <FaFolder className=\"mr-2 text-white\" />\r\n            {isSidebarOpen && <span>Users and Groups</span>}\r\n          </button>\r\n        </li>\r\n\r\n        {/* Competition Menu */}\r\n        <li>\r\n          <button className=\"flex items-center w-full text-left p-2 text-white hover:bg-gray-800 rounded bg-black\">\r\n            <FaFolder className=\"mr-2 text-white\" />\r\n            {isSidebarOpen && <span>Competition</span>}\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarComponent;\r\n","import React from 'react';\r\n\r\nconst StatusBar = () => {\r\n  const [time, setTime] = React.useState(new Date().toLocaleTimeString());\r\n  const [batteryLevel, setBatteryLevel] = React.useState(100);\r\n  const [networkStatus, setNetworkStatus] = React.useState(\"4G\");\r\n  const [signalStrength, setSignalStrength] = React.useState(\"Full\");\r\n\r\n  // Update time every second\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime(new Date().toLocaleTimeString());\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Simulate battery and network status for demonstration\r\n  React.useEffect(() => {\r\n    // Placeholder for Battery Status API\r\n    const battery = navigator.getBattery ? navigator.getBattery() : Promise.resolve({ level: 1 });\r\n    battery.then(bat => setBatteryLevel(Math.round(bat.level * 100)));\r\n\r\n    // Simulate network status\r\n    const updateNetworkStatus = () => setNetworkStatus(navigator.onLine ? \"4G\" : \"No Connection\");\r\n    updateNetworkStatus(); // Set initial status\r\n    window.addEventListener('online', updateNetworkStatus);\r\n    window.addEventListener('offline', updateNetworkStatus);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', updateNetworkStatus);\r\n      window.removeEventListener('offline', updateNetworkStatus);\r\n    };\r\n  }, []);\r\n\r\n  // Simulate signal strength changes every 5 seconds\r\n  React.useEffect(() => {\r\n    const signalStrengthLevels = [\"No Signal\", \"Weak\", \"Fair\", \"Good\", \"Full\"];\r\n    \r\n    const updateSignalStrength = () => {\r\n      const randomIndex = Math.floor(Math.random() * signalStrengthLevels.length);\r\n      setSignalStrength(signalStrengthLevels[randomIndex]);\r\n    };\r\n\r\n    const signalInterval = setInterval(updateSignalStrength, 5000);\r\n    return () => clearInterval(signalInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n  <div className=\"bg-gray-800 text-white p-2 flex justify-between items-center text-sm fixed top-0 w-full z-10\">\r\n  <span className=\"px-0.5 md:hidden\">{time}</span>\r\n  <div className=\"flex items-center mr-16 md:hidden\">\r\n  <span className=\"px-1\">{networkStatus}</span> \r\n  <span className=\"px-1\">🔋 {batteryLevel}%</span>\r\n  <span className=\"px-1\">📶 </span>\r\n</div>\r\n\r\n</div>\r\n\r\n  </>\r\n  );\r\n};\r\n\r\nexport default StatusBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport StatusBar from \"./StatusBar\";\r\n\r\nconst MenuItem = ({ item, onDelete, onEdit, isOpen, toggleOpen }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState(item.title);\r\n\r\n  const handleSave = () => {\r\n    onEdit(item.id, editedTitle);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditedTitle(item.title);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"flex items-center justify-between\">\r\n        {isEditing ? (\r\n          <div className=\"flex flex-col\">\r\n            <input\r\n              type=\"text\"\r\n              value={editedTitle}\r\n              onChange={(e) => setEditedTitle(e.target.value)}\r\n              className=\"border border-gray-300 rounded-md p-1\"\r\n            />\r\n            <div className=\"flex justify-start space-x-4 mt-2\">\r\n              <button\r\n                className=\"text-blue-600 text-sm px-1 py-1\"\r\n                onClick={handleSave}\r\n              >\r\n                Update\r\n              </button>\r\n              <button\r\n                className=\"text-gray-600 text-sm px-1 py-1\"\r\n                onClick={handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <span className=\"text-base px-2 py-5\">{item.title}</span>\r\n            {item.children && item.children.length > 0 && (\r\n              <button\r\n                className=\"text-gray-600 text-sm px-1 py-1\"\r\n                onClick={toggleOpen}\r\n              >\r\n                {isOpen ? \"▲\" : \"▼\"}\r\n              </button>\r\n            )}\r\n            <button\r\n              className=\"text-red-600 ml-2 text-sm px-1 py-1\"\r\n              onClick={() => onDelete(item.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              className=\"text-blue-600 ml-2 text-sm px-1 py-1\"\r\n              onClick={() => setIsEditing(true)}\r\n            >\r\n              Edit\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      {isOpen && item.children && (\r\n        <ul className=\"ml-6\">\r\n          {item.children.map((child) => (\r\n            <MenuItem\r\n              key={child.id}\r\n              item={child}\r\n              onDelete={onDelete}\r\n              onEdit={onEdit}\r\n              isOpen={isOpen}\r\n              toggleOpen={toggleOpen}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst MenuComponent = () => {\r\n  const [menus, setMenus] = useState([]); // State to store menus\r\n  const [menuItems, setMenuItems] = useState([]); // State to store menu items\r\n  const [parentId, setParentId] = useState(\"\"); // State for parent menu item\r\n  const [depth, setDepth] = useState(1); // State for depth\r\n  const [title, setTitle] = useState(\"\"); // State for title (menu item name)\r\n  const [menuId, setMenuId] = useState(\"\"); // State for selected menu\r\n  const [selectedMenu, setSelectedMenu] = useState(null); // State to store the selected menu object\r\n  const [openItems, setOpenItems] = useState({}); // State to track open/closed items\r\n\r\n  useEffect(() => {\r\n    const fetchMenus = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://menu-system.infinityfreeapp.com/api/menus\"\r\n        );\r\n        const data = await response.json();\r\n        setMenus(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching menus:\", error);\r\n      }\r\n    };\r\n    fetchMenus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMenuItems = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://menu-system.infinityfreeapp.com/api/submenus\"\r\n        );\r\n        const data = await response.json();\r\n        setMenuItems(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching menu items:\", error);\r\n      }\r\n    };\r\n    fetchMenuItems();\r\n  }, []);\r\n\r\n  //   // Handle deleting a menu item\r\n  const handleDeleteItem = (id) => {\r\n    fetch(`http://menu-system.infinityfreeapp.com/api/menu-items/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to delete menu item\");\r\n        }\r\n        setMenuItems(menuItems.filter((item) => item.id !== id));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting menu item:\", error);\r\n      });\r\n  };\r\n\r\n  // Handle editing a menu item\r\n  const handleEditItem = (id, newTitle) => {\r\n    fetch(`http://menu-system.infinityfreeapp.com/api/menu-items/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ title: newTitle }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to update menu item\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((updatedItem) => {\r\n        setMenuItems((prevItems) =>\r\n          prevItems.map((item) => (item.id === id ? updatedItem : item))\r\n        );\r\n        alert(\"Menu item updated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating menu item:\", error);\r\n        alert(\"Failed to update menu item\");\r\n      });\r\n  };\r\n\r\n  const handleMenuChange = (e) => {\r\n    const selectedId = e.target.value;\r\n    setMenuId(selectedId);\r\n    const selected = menus.find((menu) => menu.id === parseInt(selectedId));\r\n    setSelectedMenu(selected || null);\r\n    setParentId(\"\"); // Reset parent selection when menu changes\r\n  };\r\n\r\n  const handleAddMenuItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title) {\r\n      alert(\"Please fill in the title\");\r\n      return;\r\n    }\r\n\r\n    const newDepth = parentId\r\n      ? menuItems.find((item) => item.id === parseInt(parentId))?.depth + 1\r\n      : depth;\r\n\r\n    if (!menuId) {\r\n      let name = title;\r\n      fetch(\"http://menu-system.infinityfreeapp.com/api/menus\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name }),\r\n      })\r\n        .then((response) =>\r\n          response.ok ? response.json() : Promise.reject(\"Failed to add menu\")\r\n        )\r\n        .then((newMenu) => {\r\n          alert(\"Menu added successfully\");\r\n          setMenus((prevMenus) => [...prevMenus, newMenu]);\r\n          setTitle(\"\");\r\n        })\r\n        .catch((error) => alert(error));\r\n    } else {\r\n      fetch(\"http://menu-system.infinityfreeapp.com/api/menu-items\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          parent_id: parentId || null,\r\n          depth: newDepth,\r\n          menu_id: menuId,\r\n        }),\r\n      })\r\n        .then((response) =>\r\n          response.ok\r\n            ? response.json()\r\n            : Promise.reject(\"Failed to add menu item\")\r\n        )\r\n        .then((newItem) => {\r\n          alert(\"Menu item added successfully\");\r\n          setMenuItems((prevItems) => [...prevItems, newItem]);\r\n          setTitle(\"\");\r\n          setParentId(\"\");\r\n        })\r\n        .catch((error) => alert(error));\r\n    }\r\n  };\r\n\r\n  // hierrachy code\r\n  const buildHierarchy = (menuItems) => {\r\n    const map = {};\r\n    const roots = [];\r\n    menuItems.forEach((item) => {\r\n      map[item.id] = { ...item, children: [] };\r\n    });\r\n    menuItems.forEach((item) => {\r\n      if (item.parent_id) {\r\n        if (map[item.parent_id]) {\r\n          map[item.parent_id].children.push(map[item.id]);\r\n        }\r\n      } else {\r\n        roots.push(map[item.id]);\r\n      }\r\n    });\r\n    return roots;\r\n  };\r\n\r\n  // Function to toggle individual item open/closed\r\n  const toggleOpen = (id) => {\r\n    setOpenItems((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id], // Toggle the open state for the item\r\n    }));\r\n  };\r\n\r\n  const filteredParents = menuItems.filter(\r\n    (item) => item.menu_id === parseInt(menuId)\r\n  );\r\n  // Function to toggle all items open/closed\r\n  const toggleAll = (open) => {\r\n    const newOpenItems = {};\r\n    menuItems.forEach((item) => {\r\n      newOpenItems[item.id] = open; // Set open state for each item\r\n    });\r\n    setOpenItems(newOpenItems); // Update the open items state\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StatusBar />\r\n      <div className=\"mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-10 text-black max-w-full h-full\">\r\n        <div className=\"col-span-1\">\r\n          {/* collapse all and expand all */}\r\n          <div className=\"flex mb-2\">\r\n            <button\r\n              className=\"w-full sm:w-auto py-2 px-4 text-sm bg-black text-white font-semibold rounded-md shadow-lg hover:bg-yellow-800 focus:outline-none focus:ring-2 focus:ring-gray-600 transition duration-150 ease-in-out\"\r\n              onClick={() => toggleAll(true)} // Expand all\r\n            >\r\n              Expand All\r\n            </button>\r\n            <button\r\n              className=\"w-full sm:w-auto py-2 px-4 text-sm bg-white text-black font-semibold rounded-md shadow-lg hover:bg-yellow-800 focus:outline-none focus:ring-2 focus:ring-gray-600 transition duration-150 ease-in-out\"\r\n              onClick={() => toggleAll(false)} // Collapse all\r\n            >\r\n              Collapse All\r\n            </button>\r\n          </div>\r\n\r\n          {menus.map((menu) => {\r\n            const hierarchy = buildHierarchy(\r\n              menuItems.filter((item) => item.menu_id === menu.id)\r\n            );\r\n\r\n            return (\r\n              <div key={menu.id}>\r\n                <h4 className=\"text-lg font-semibold\">\r\n                  {menu.name}\r\n                  {/* Show the expand/collapse button only if there are menu items */}\r\n                  {hierarchy.length > 0 && (\r\n                    <button\r\n                      className=\"text-gray-600 text-sm px-1 py-1\"\r\n                      onClick={() => toggleOpen(menu.id)}\r\n                    >\r\n                      {openItems[menu.id] ? \"▲\" : \"▼\"}\r\n                    </button>\r\n                  )}\r\n                </h4>\r\n                {/* Render the menu items if the menu is expanded */}\r\n                {openItems[menu.id] && hierarchy.length > 0 && (\r\n                  <ul className=\"tree mt-2\">\r\n                    {hierarchy.map((item) => (\r\n                      <MenuItem\r\n                        key={item.id}\r\n                        item={item}\r\n                        onDelete={handleDeleteItem}\r\n                        onEdit={handleEditItem}\r\n                        isOpen={openItems[item.id]}\r\n                        toggleOpen={() => toggleOpen(item.id)}\r\n                      />\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n\r\n        </div>\r\n        <div className=\"col-span-2\">\r\n          <form className=\"space-y-5 text-left\" onSubmit={handleAddMenuItem}>\r\n            <div className=\"w-full\">\r\n              <label className=\"block text-xxl font-medium text-left\">\r\n                Menu\r\n              </label>\r\n              <select\r\n                value={menuId}\r\n                onChange={handleMenuChange}\r\n                className=\"w-full border border-gray-300 rounded-md p-3 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-150 ease-in-out\"\r\n              >\r\n                <option value=\"\">Select Menu</option>\r\n                {menus.map((menu) => (\r\n                  <option key={menu.id} value={menu.id}>\r\n                    {menu.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {selectedMenu && (\r\n              <div className=\"flex flex-col space-y-4\">\r\n                <div className=\"w-full\">\r\n                  <label className=\"block text-xxl font-medium text-left\">\r\n                    Menu ID\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    readOnly\r\n                    value={selectedMenu.id}\r\n                    className=\"w-full border border-gray-300 rounded-md p-3 bg-gray-200 focus:outline-none\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"w-full\">\r\n              <label className=\"block text-xxl font-medium text-left\">\r\n                Parent\r\n              </label>\r\n              <select\r\n                value={parentId}\r\n                onChange={(e) => setParentId(e.target.value)}\r\n                className=\"border rounded-md p-2 w-full\"\r\n                disabled={!menuId}\r\n              >\r\n                <option value=\"\">Select a parent (optional)</option>\r\n                {filteredParents.map((parent) => (\r\n                  <option key={parent.id} value={parent.id}>\r\n                    {parent.title}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"w-full\">\r\n              <label className=\"block text-xxl font-medium text-left\">\r\n                Title\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                className=\"w-full border border-gray-300 rounded-md p-3 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-150 ease-in-out\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"w-full text-left space-y-2\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"mt-4 bg-blue-500 text-white rounded-md px-4 py-2\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuComponent;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport SidebarComponent from './components/SidebarComponent';\r\nimport MenuComponent from './components/MenuComponent'; // Import your Menu Component\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"flex\">\r\n      <SidebarComponent />\r\n      <div className=\"flex-1\">\r\n        <MenuComponent />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'; // Make sure this path is correct\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}